#+title: spamtrap-system
#+author: jgru

#+html: <a href="https://www.python.org/"><img alt="Python3.10" src="https://img.shields.io/badge/Python-3.10-brightgreen"/></a>
#+html: <a href="https://github.com/psf/black"><img alt="Code style: black" src="https://img.shields.io/badge/code%20style-black-000000.svg"></a>
#+html: <a href="https://www.sphinx-doc.org/"><img alt="Docu with Sphinx" src="https://img.shields.io/badge/Made%20with-Sphinx-1f425f.svg"></a>
#+html: <a href="https://github.com/jgru/evidential-calculator/blob/master/Dockerfile"><img alt="Dockerized" src="https://img.shields.io/badge/-Dockerized-lightgrey"/></a>
#+html: <a href="https://github.com/LouvainVerificationLab/pynusmv"><img height="24" width="24" src="https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/docker.svg"/></a>

This repository houses a collection of tools to build and run a distributed
spamtrap system that is comprised of IMAP- as well as SMTP-collectors and an
analysis backend. This repository builds to Python-projects, =spamtrap-backend=
and =spamtraps=, and provides several Dockerfiles and Dockerized setups to run
such a system.

In-depth documentation of the project can be found here:
https://jgru.github.io/spamtrap-system/

* ToC :TOC_2:
- [[#synopsis][Synopsis]]
- [[#usage][Usage]]
  - [[#quick-start][Quick Start]]
  - [[#instructions-for-single-components][Instructions for Single Components]]
- [[#todo][Todo]]

* Synopsis
The collectors constitute the spamtraps and transfer the collected spam via [[https://www.amqp.org/][AMQP]]
or [[https://hpfeeds.org/][Hpfeeds]] to the backend. There, the (mal)spam will be automatically decomposed
and analyzed with the help of a sandbox, e.g., [[https://github.com/cuckoosandbox/cuckoo][Cuckoo]] or [[https://tria.ge/dashboard][Tria.ge]], and [[https://github.com/buffer/thug][Thug]]. The
ultimate goal of the system is to gather actionable threat intelligence
regarding the infrastructure used by malware, which is accomplished by
evaluating the results given by the sandbox and utilizing [[https://github.com/JPCERTCC/MalConfScan][MalConfScan]]. Results
are persisted a [[https://www.mongodb.com/][MongoDB]] instance. In order to assist analyses, relevant results
can be pushed into an [[https://www.elastic.co/elasticsearch/][Elasticsearch]] instance with a [[https://www.elastic.co/kibana][Kibana]] frontend, a [[https://github.com/CERT-Polska/karton][Karton]]
analysis pipeline, or a [[https://www.misp-project.org/][MISP]] instance where threat intel analyst could query the
collection.

This project aims to be modular to a large extent, so that further collectors or
reporting components could be added easily.

* Usage
** Quick Start
To quickly get started with the modular system, a =docker-compose.yml=-file is
provided which serves starts the services connected to the backend, i.e.,

- processing backend
- MongoDB
- Hpfeeds broker (without TLS protected)

To run it, just use the following command:
#+begin_src shell
docker-compose up
#+end_src

** Instructions for Single Components
For detailed instructions regarding the installation, deployment and usage of
each component, refer to the readme-files on installation in the subdirectories.

The IMAP-collector and the fake open SMTP relay can be used right off the deck
after having installed the requirements listed in the respective
=requirements.txt=-file. To run the SMTP fake destination SMTP server, the
TLS-protected Hpfeeds-broker, the Elastic stack or the MongoDB just use the
=docker-compose=-files within [[file:periphery/][periphery-directory]].

The installation of Cuckoo is a bit more involved and time consuming. Therefore,
an [[https://www.ansible.com/][Ansible]] role can ease the setup of this malware analysis sandbox. See
[[https://github.com/jgru/ansible-cuckoo-virtualbox]] for further information.

* Todo
There are several things that could be added and improved.

- ☒ Add a reporting module to deliver the results into a
  [[https://github.com/MISP/MISP][MISP]]-instance
- ☒ Add Hatching Tria.ge API-usage as an alternative to the on-premise
  operation of a /Cuckoo/-sandbox
- ☒ Add a reporter to push malspam into a pipeline of [[https://github.com/CERT-Polska/karton][Karton]]-tasks
- ☒ Make enriching optional
- ☒ Make MongoDB ingestion optional
- ☐ Add an option to ingest the decomposed malspam into [[https://mwdb.readthedocs.io/en/latest/][mwdb]] 
- ☐ Add lookups for threat intel services, like Shodan, URLhaus,
  GreyNoise v2, VT, etc.
- ☐ Conduct performance tests
- ☐ Your idea...;)
